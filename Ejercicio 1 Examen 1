***Comandos de Imagen de Docker****

# Imagen base de MySQL
FROM mysql:latest

# Variables de entorno para la base de datos
ENV MYSQL_ROOT_PASSWORD=root
ENV MYSQL_DATABASE=tickets_db

# Script SQL para inicializar la base de datos
COPY init.sql /docker-entrypoint-initdb.d/


version: '3.8'

services:
  db:
    build: .
    container_name: tickets_db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: tickets_db
    volumes:
      - db_data:/var/lib/mysql

volumes:
  db_data:

****Script con Sintaxis DDL y DML****
CREATE DATABASE IF NOT EXISTS tickets_db;

USE tickets_db;

CREATE TABLE Usuario (
    ID_Usuario INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(100) NOT NULL,
    Correo VARCHAR(100) NOT NULL,
    Teléfono VARCHAR(20)
);

CREATE TABLE Ingeniero (
    ID_Ingeniero INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(100) NOT NULL,
    Correo VARCHAR(100) NOT NULL,
    Experiencia VARCHAR(200),
    Capacidad_Actual INT DEFAULT 0
);

CREATE TABLE Categoría (
    ID_Categoría INT AUTO_INCREMENT PRIMARY KEY,
    Nombre VARCHAR(100) NOT NULL
);

CREATE TABLE Caso (
    ID_Caso INT AUTO_INCREMENT PRIMARY KEY,
    Descripción TEXT NOT NULL,
    Fecha_Apertura DATETIME DEFAULT CURRENT_TIMESTAMP,
    Fecha_Cierre DATETIME,
    Estado VARCHAR(50) DEFAULT 'Abierto',
    ID_Usuario INT,
    ID_Categoría INT,
    FOREIGN KEY (ID_Usuario) REFERENCES Usuario(ID_Usuario),
    FOREIGN KEY (ID_Categoría) REFERENCES Categoría(ID_Categoría)
);

CREATE TABLE Asignación (
    ID_Asignación INT AUTO_INCREMENT PRIMARY KEY,
    ID_Caso INT,
    ID_Ingeniero INT,
    Fecha_Asignación DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_Caso) REFERENCES Caso(ID_Caso),
    FOREIGN KEY (ID_Ingeniero) REFERENCES Ingeniero(ID_Ingeniero)
);

CREATE TABLE Procedimiento (
    ID_Procedimiento INT AUTO_INCREMENT PRIMARY KEY,
    ID_Caso INT,
    Descripción TEXT NOT NULL,
    Fecha_Procedimiento DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_Caso) REFERENCES Caso(ID_Caso)
);

CREATE TABLE Calificación (
    ID_Calificación INT AUTO_INCREMENT PRIMARY KEY,
    ID_Caso INT,
    Puntuación INT CHECK (Puntuación >= 1 AND Puntuación <= 5),
    Comentarios TEXT,
    FOREIGN KEY (ID_Caso) REFERENCES Caso(ID_Caso)
);

***DML (Data Manipulation Language)***

-- Insertar usuarios
INSERT INTO Usuario (Nombre, Correo, Teléfono) VALUES ('Juan Pérez', 'juan.perez@example.com', '123456789');
INSERT INTO Usuario (Nombre, Correo, Teléfono) VALUES ('Ana García', 'ana.garcia@example.com', '987654321');

-- Insertar ingenieros
INSERT INTO Ingeniero (Nombre, Correo, Experiencia) VALUES ('Carlos Rodríguez', 'carlos.rodriguez@example.com', 'Experto en redes');
INSERT INTO Ingeniero (Nombre, Correo, Experiencia) VALUES ('Marta López', 'marta.lopez@example.com', 'Especialista en hardware');

-- Insertar categorías
INSERT INTO Categoría (Nombre) VALUES ('Problema de Redes');
INSERT INTO Categoría (Nombre) VALUES ('Problema de Hardware');
INSERT INTO Categoría (Nombre) VALUES ('Problema de Software');

-- Insertar casos
INSERT INTO Caso (Descripción, ID_Usuario, ID_Categoría) VALUES ('No hay conexión a internet', 1, 1);
INSERT INTO Caso (Descripción, ID_Usuario, ID_Categoría) VALUES ('La impresora no funciona', 2, 2);

-- Asignar casos a ingenieros
INSERT INTO Asignación (ID_Caso, ID_Ingeniero) VALUES (1, 1);
INSERT INTO Asignación (ID_Caso, ID_Ingeniero) VALUES (2, 2);

-- Registrar procedimientos
INSERT INTO Procedimiento (ID_Caso, Descripción) VALUES (1, 'Revisar cableado');
INSERT INTO Procedimiento (ID_Caso, Descripción) VALUES (2, 'Reiniciar impresora');

-- Registrar calificaciones
INSERT INTO Calificación (ID_Caso, Puntuación, Comentarios) VALUES (1, 5, 'Excelente servicio');
INSERT INTO Calificación (ID_Caso, Puntuación, Comentarios) VALUES (2, 3, 'Servicio adecuado');
